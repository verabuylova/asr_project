defaults:
  - model: deepspeech2
  - writer: wandb
  - metrics: metrics_augs
  - datasets: onebatchtest
  - dataloader: onebatchtest
  - transforms: base
  - _self_
optimizer:
  _target_: torch.optim.AdamW
  lr: 0.0001
lr_scheduler:
  _target_: torch.optim.lr_scheduler.OneCycleLR
  max_lr: 0.0002
  pct_start: 0.1
  steps_per_epoch: ${trainer.epoch_len}
  epochs: ${trainer.n_epochs}
  anneal_strategy: cos
loss_function:
  _target_: src.loss.CTCLossWrapper
text_encoder:
  _target_: src.text_encoder.CTCTextEncoder
  use_lm: True
  kenlm_model_path: "3-gram.arpa"
  vocab_path: "librispeech-vocab.txt"
trainer:
  log_step: 1
  n_epochs: 3
  epoch_len: 40
  device_tensors: ["spectrogram", "text_encoded"] # which tensors should be on device (ex. GPU)
  from_pretrained: null
  device: auto # device name or "auto"
  override: True # if True, will override the previous run with the same name
  monitor: "min val_WER_(Argmax)" # "off" or "max/min metric_name", i.e. our goal is to maximize/minimize metric
  save_period: 5 # checkpoint each save_period epochs in addition to the best epoch
  early_stop: ${trainer.n_epochs} # epochs for early stopping
  save_dir: "saved_augs"
  seed: 60
  max_grad_norm: 8
